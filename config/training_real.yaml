##################### Dataset Options #####################
data_dir: './dataset/debug'
training_dir: "train"
validation_dir: "val"

##################### Basic Options #####################
data_mode: "real_scene"
num_gpus: 1
cuda_device_index: "1"
log_root_dir: './log/'
checkpoint_root_dir: './ckpt'
log_every_n_steps: 10
check_val_every_n_epoch: 2
epochs: 100
learning_rate: 0.0001
weight_decay: 0.00001
batch_size: 16
num_workers: 32
# resume_path: "./ckpt/exp_2024_10_30_1_27_58/epoch=20-val_loss=3.25.ckpt"
pretrain: False
pretrain_model_path: "./ckpt/exp_2024_10_30_6_4_25/epoch=29-val_loss=3.29.ckpt"
valid_before_training: False
log: 'tensorboard'
##################### Data Process #####################
autoregressive_points: 30
traj_downsample_stride: 5
item_number: 2
token_nums: 1200
append_token: 3
xy_max: 12
process_dim: [256, 256]

##################### BEV Encoder #####################
bev_encoder_in_channel: 64
bev_x_bound: [-10.0, 10.0, 0.1]
bev_y_bound: [-10.0, 10.0, 0.1]
bev_z_bound: [-10.0, 10.0, 20.0]
d_bound: [0.5, 12.5, 0.25]
final_dim: [256, 256]
bev_down_sample: 8
backbone: "efficientnet-b4"
bev_input: False
bev_input_backbone: 'efficient_net'
##################### Target #####################
add_noise_to_target: True
target_noise_threshold: 0.5
target_range: 1.4
use_fuzzy_target: False

##################### BEV Query #####################
fusion_method: "query"
query_en_dim: 256           #embedding 维度
query_en_heads: 4
query_en_layers: 4
query_en_dropout: 0.05
query_en_bev_length: 256      #bevfeature经过 bevencoder之后的分辨率为16 * 16，然后拉成256

##################### Decoder #####################
decoder_method: "DETR"
tf_de_dim: 256
tf_de_heads: 4
tf_de_layers: 4
tf_de_dropout: 0.05
